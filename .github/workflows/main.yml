name: Blog CI/CD

on:
  push:
    branches: [main] # 当监测 main,master 的 push
    paths: # 监测文件变动限制
      - '*.json'
      - '**.yml'
      - '**.md'
      - '**/source/**'

jobs:
  # 任务一：编译 Hexo 静态文件
  build:
    name: Build
    timeout-minutes: 10 # 设置 10 分钟超时
    runs-on: ubuntu-latest # 指定最新 ubuntu 系统
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # 版本从 v2 更新到 v4

      - name: Setup Node.js
        uses: actions/setup-node@v4 # 版本从 v2 更新到 v4
        with:
          node-version: '16'

      - name: Cache node_modules # 缓存 node_modules，提高编译速度
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies # 安装源代码所需插件
        run: npm install

      - name: Install Hexo-cli # 安装 Hexo
        run: npm install -g hexo-cli --save
      
      - name: Build Static Files # 编译创建静态博客文件
        run: |
          hexo clean
          hexo g

      - name: Upload Artifact # 上传编译好的 public 文件夹作为产物
        uses: actions/upload-artifact@v4 # <--- 主要修复：版本从 v3 更新到 v4
        with:
          name: hexo-public # 产物名称
          path: public/ # 需要上传的目录

  # 任务二：部署到个人服务器
  deploy_server:
    name: Deploy to Server
    needs: build # 依赖 build 任务，等待它成功完成后再执行
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact # 下载 build 任务上传的产物
        uses: actions/download-artifact@v4 # <--- 主要修复：版本从 v3 更新到 v4
        with:
          name: hexo-public # 产物名称，必须和 build 中的一致

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.1 # 这个 action 目前没有大的版本更新，保持不变
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          ARGS: "-avzr --delete"
          SOURCE: "./" # 源目录，因为下载的产物就在根目录
          REMOTE_HOST: "www.triority.cc"
          REMOTE_USER: "root"
          TARGET: "/hexo"
          
  # 任务三：部署到 GitHub Pages
  deploy_gh_pages:
    name: Deploy to GitHub Pages
    needs: build # 依赖 build 任务，等待它成功完成后再执行
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact # 下载 build 任务上传的产物
        uses: actions/download-artifact@v4 # <--- 主要修复：版本从 v3 更新到 v4
        with:
          name: hexo-public # 产物名称，必须和 build 中的一致

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3 # 这个 action 目前 v3 仍是主流稳定版，保持不变
        with:
          personal_token: ${{ secrets.GH_PAGES_TOKEN }}
          external_repository: Triority/Triority.github.io
          publish_branch: gh-pages
          publish_dir: ./ # 推送的文件夹，即下载的产物所在目录
          user_name: 'Triority[bot]'
          user_email: 'github-actions[bot]@github.com'
          force_orphan: true
